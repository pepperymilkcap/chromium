# Copyright 2013 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("../clang.gni")
import("../goma.gni")
import("../gcc_toolchain.gni")

if (is_gyp) {
  # Set the compilers for GYP to use. This logic is only relevant to GYP where
  # there is "a" target compiler. In native GN builds, we have separate
  # compilers for the toolchains below, any or all of which could be active in
  # any given build.
  if (is_clang) {
    # Set the GYP header for all toolchains when running under Clang.
    gyp_header = make_clang_global_settings
  } else {
    gyp_header = ""
  }

  if (use_goma) {
    # There is a TODO(yyanagisawa) in common.gypi about the make generator not
    # supporting CC_wrapper without CC. As a result, we must add a condition
    # when on the generator when we're not explicitly setting the variables
    # above (which happens when gyp_header is empty at this point).
    #
    # GYP will interpret the file once for each generator, so we have to write
    # this condition into the GYP file since the user could have more than one
    # generator set.
    if (gyp_header == "") {
      gyp_header +=
        "'conditions':" +
        "['\"<(GENERATOR)\"==\"ninja\"', {" +
        make_goma_global_settings +
        "}],"
    } else {
      gyp_header += make_goma_global_settings
    }
  }
}

# ARM --------------------------------------------------------------------------

gcc_toolchain("arm") {
  cc = "arm-linux-gnueabi-gcc"
  cxx = "arm-linux-gnueabi-g++"
  ar = "arm-linux-gnueabi-ar"
  ld = cxx

  toolchain_cpu_arch = "arm"
  toolchain_os = "linux"
}

# 32-bit -----------------------------------------------------------------------

gcc_toolchain("x86") {
  cc = "gcc"
  cxx = "g++"
  ar = "ar"
  ld = cxx

  toolchain_cpu_arch = "x86"
  toolchain_os = "linux"
}

gcc_toolchain("x64") {
  cc = "gcc"
  cxx = "g++"
  ar = "ar"
  ld = cxx

  toolchain_cpu_arch = "x64"
  toolchain_os = "linux"
}
